---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-cert
  labels:
    app: test-cert
spec:
  selector:
    matchLabels:
      app: test-cert
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: test-cert
    spec:
      containers:
        - name: test-cert
          #image: nginx:latest
          image: aimvector/python:test
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: test-cert-service
  labels:
    app: test-cert
spec:
  type: NodePort
  selector:
    app: test-cert
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 5000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-cert
  #  annotations:
  #    kubernetes.io/ingress.class: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx-example
  tls:
    - hosts:
        - cert-test.test.manders.be
      secretName: cert-test-manders-be
  rules:
    - host: cert-test.test.manders.be
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-cert-service
                port:
                  number: 80

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cert-test-manders-be
spec:
  dnsNames:
    - cert-test.test.manders.be
  secretName: cert-test-manders-be
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
